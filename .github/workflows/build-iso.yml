name: Build & Publish ISO Image
on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * mon" # every monday at 3AM
concurrency: build
jobs:
  build-images:
    name: "Build ISO Image"
    if: github.repository == 'jervw/snowflake'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - minimal-iso
    permissions:
      contents: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Install Nix"
        uses: DeterminateSystems/nix-installer-action@main

      - name: "Setup Nix Cache"
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: "Build ISO Image"
        run: |
          nix build .#images.${{ matrix.image }} --print-build-logs
          mkdir -p output
          cp result/iso/*.iso output/

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}
          path: output/*.iso

  publish-images:
    name: "Publish ISO Image"
    runs-on: ubuntu-latest
    needs: build-images
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - name: "Download ISO Artifacts"
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: "Get current date"
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> "${GITHUB_OUTPUT}"

      - name: "Calculate Checksums"
        run: |
          sha256sum *.iso > checksums.txt

      - name: "Create Release"
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: "iso-${{ steps.get-date.outputs.date }}"
          tag_name: "iso-${{ steps.get-date.outputs.date }}"
          files: |
            *.iso
            checksums.txt
          body: |
            # Weekly ISO Release (${{ steps.get-date.outputs.date }})

            Weekly automated ISO image release for NixOS minimal configuration.
